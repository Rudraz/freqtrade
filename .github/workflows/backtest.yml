name: Backtest

on:
  push:
    branches: [ main ]
    paths: ['user_data/**','docker-compose.yml','.github/workflows/backtest.yml']
  pull_request:
    paths: ['user_data/**','docker-compose.yml','.github/workflows/backtest.yml']

jobs:
  backtest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        strategy: [SampleStrategy, RSIMeanReversion]  # adjust as you add strategies
    steps:
      - uses: actions/checkout@v4

      - name: Pull Freqtrade image
        run: docker pull freqtradeorg/freqtrade:stable

      # Weâ€™ll create config.backtest.json and also overwrite config.json so
      # accidental calls use the CI-safe exchange too.
      - name: Create CI config (start with KuCoin)
        run: |
          mkdir -p user_data
          cat > user_data/config.backtest.json <<'JSON'
          {
            "dry_run": true,
            "exchange": {
              "name": "kucoin",
              "key": "DUMMY",
              "secret": "DUMMY",
              "ccxt_config": {"enableRateLimit": true},
              "ccxt_async_config": {"enableRateLimit": true}
            },
            "pair_whitelist": ["BTC/USDT", "ETH/USDT"],
            "timeframe": "5m",
            "stake_currency": "USDT",
            "stake_amount": "unlimited",
            "max_open_trades": 2,
            "api_server": {"enabled": false}
          }
          JSON
          cp user_data/config.backtest.json user_data/config.json

      - name: Select exchange & download data with fallback (KuCoin -> Kraken)
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
        run: |
          set -u
          CFG="/freqtrade/user_data/config.backtest.json"
          MOUNT="${GITHUB_WORKSPACE}/user_data:/freqtrade/user_data"
          LOG_DL="dl.log"

          echo "==> Attempt 1: KuCoin with BTC/USDT,ETH/USDT"
          set +e
          docker run --rm -v "$MOUNT" freqtradeorg/freqtrade:stable \
            download-data --config "$CFG" -t 5m --timerange 20250110-20250120 \
            > "$LOG_DL" 2>&1
          STATUS=$?
          set -e

          if [ $STATUS -ne 0 ] || grep -E "ExchangeNotAvailable|451|restricted location|error" -i "$LOG_DL" >/dev/null 2>&1; then
            echo "==> KuCoin download failed or blocked. Switching to Kraken with USD pairs."

            # Rewrite CI config to Kraken + USD pairs
            cat > "${GITHUB_WORKSPACE}/user_data/config.backtest.json" <<'JSON'
            {
              "dry_run": true,
              "exchange": {
                "name": "kraken",
                "key": "DUMMY",
                "secret": "DUMMY",
                "ccxt_config": {"enableRateLimit": true},
                "ccxt_async_config": {"enableRateLimit": true}
              },
              "pair_whitelist": ["BTC/USD", "ETH/USD"],
              "timeframe": "5m",
              "stake_currency": "USD",
              "stake_amount": "unlimited",
              "max_open_trades": 2,
              "api_server": {"enabled": false}
            }
            JSON
            cp "${GITHUB_WORKSPACE}/user_data/config.backtest.json" "${GITHUB_WORKSPACE}/user_data/config.json"

            echo "==> Attempt 2: Kraken with BTC/USD,ETH/USD"
            docker run --rm -v "$MOUNT" freqtradeorg/freqtrade:stable \
              download-data --config "$CFG" -t 5m --timerange 20250110-20250120 \
              | sed -e '1,120p'
          else
            echo "==> KuCoin download succeeded."
            sed -e '1,120p' "$LOG_DL" || true
          fi

      - name: Show files (guard)
        run: |
          echo "Workspace: ${{ github.workspace }}"
          ls -la
          echo "--- user_data ---"
          ls -la user_data
          echo "--- Dump config.backtest.json (first 120 lines) ---"
          sed -n '1,120p' user_data/config.backtest.json

      - name: Run backtest (${{ matrix.strategy }})
        run: |
          mkdir -p user_data/backtest_results
          docker run --rm -v ${{ github.workspace }}/user_data:/freqtrade/user_data \
            freqtradeorg/freqtrade:stable \
            backtesting --config /freqtrade/user_data/config.backtest.json \
            --strategy ${{ matrix.strategy }} \
            --timeframe 5m \
            --timerange 20250110-20250120 \
            --export trades \
            --export-filename /freqtrade/user_data/backtest_results/${{ matrix.strategy }}_bt.json

      - name: Upload artifact (${{ matrix.strategy }})
        uses: actions/upload-artifact@v4
        with:
          name: backtest-${{ matrix.strategy }}
          path: user_data/backtest_results/${{ matrix.strategy }}_bt.json
